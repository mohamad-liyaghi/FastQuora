services:
  backend:
    container_name: 'fast-quora-backend'
    command: sh "docker/scripts/backend.sh"
    tty: true
    ports:
      - "8000:8000"
    volumes:
      - .:/backend
    networks:
      - main
    depends_on:
        postgres:
          condition: service_healthy
        elastic:
          condition: service_healthy
        redis:
          condition: service_healthy
        jaeger:
          condition: service_healthy
  postgres:
    container_name: 'fast-quora-postgres'
    image: 'postgres:15.4-alpine'
    expose:
      - "5432"
    networks:
        - main
    volumes:
      - fast_quora_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
  elastic:
    container_name: 'fast-quora-elastic'
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.15.2'
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - main
    volumes:
      - fast_quora_elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  redis:
    restart: on-failure
    container_name: 'fast-quora-redis'
    image: redis:6.2-alpine
    expose:
      - "6379"
    networks:
      - main
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 2s
      timeout: 5s
      retries: 5
  jaeger:
    container_name: 'fast-quora-jaeger'
    image: jaegertracing/all-in-one:1.32
    ports:
      - "16686:16686"
    networks:
      - main
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:16686"]
      interval: 30s
      timeout: 10s
      retries: 5
